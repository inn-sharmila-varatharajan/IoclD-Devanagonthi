
@{
    ViewBag.Title = "TruckCount";
}


<style type="text/css">

    .row {
        display: flex;
    }

    .card {
        border-radius: 5px;
        -webkit-box-shadow: 0 1px 2.94px 0.06px rgba(4,26,55,0.16);
        box-shadow: 0 1px 2.94px 0.06px rgba(4,26,55,0.16);
        border: none;
        -webkit-transition: all 0.3s ease-in-out;
        transition: all 0.3s ease-in-out;
        width: 100%;
    }

    .column {
        margin-left: 10px;
        flex: 10%;
        padding: 5px;
        /* Should be removed. Only for demonstration */
    }

    .paging-nav {
        text-align: right;
        padding-top: 2px;
    }

        .paging-nav a {
            margin: auto 1px;
            text-decoration: none;
            display: inline-block;
            padding: 1px 7px;
            background: #03174f;
            color: white;
            border-radius: 3px;
        }

        .paging-nav .selected-page {
            background: #03174f;
            font-weight: bold;
        }

    .paging-nav,
    #Table {
        margin: 0 auto;
        font-family: Arial, sans-serif;
    }

    .divpadding {
        border: 3px solid green;
    }
</style>
<style type="text/css">
    .pg-normal {
        color: #ffffff;
        font-size: 15px;
        cursor: pointer;
        background: #03174f;
        padding: 2px 4px 2px 4px;
    }

    .pg-selected {
        color: #000;
        font-size: 15px;
        background: #ffffff;
        padding: 2px 4px 2px 4px;
    }

    table.yui {
        font-family: arial;
        border-collapse: collapse;
        border: solid 3px #03174f;
        font-size: small;
    }

        table.yui td {
            padding: 5px;
            border-right: solid 1px #03174f;
        }

    table td {
        padding: 0.5rem;
        border: 1px solid #fff;
    }

    #btnExport {
        width: 35px;
    }

    @@keyframes spinner {
        0% {
            transform: translate3d(-50%, -50%, 0) rotate(0deg);
        }

        100% {
            transform: translate3d(-50%, -50%, 0) rotate(360deg);
        }
    }

    .spin::before {
        animation: 1.5s linear infinite spinner;
        animation-play-state: inherit;
        border: solid 5px #cfd0d1;
        border-bottom-color: #1c87c9;
        border-radius: 50%;
        content: "";
        height: 40px;
        width: 40px;
        position: absolute;
        top: 10%;
        left: 10%;
        transform: translate3d(-50%, -50%, 0);
        will-change: transform;
    }

    #loader {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        background: rgba(0,0,0,0.75) url(../assets/loader.gif) no-repeat center center;
        z-index: 10000;
    }

    table {
        border-collapse: collapse;
    }

    tr {
        border-bottom: 1pt solid black;
        background: #fafafa;
    }

        tr:nth-child(even) {
            background-color: #D6EEEE;
        }

    .push {
        margin-left: 2%;
        margin-top: 1%;
    }

    .push1 {
        margin-left: 48%;
    }
</style>


<body>
    <div class="row mb-5 justify-content-center" style="margin-top:50px;">
        <div class="col-lg-9">
            <div class="card">
                <h2 class="card-header fw-bolder iocl-blue-text">
                     Truck Count Report
                </h2>
                <div class="row push">
                    <div class="d-flex justify-content-start">
                        <div class="btn-group">
                            <h4 class="">From</h4>
                            <input type="date" id="datechange">
                        </div>
                        <div class="btn-group">
                            <h4 class="">To</h4>
                            <input type="date" id="datechange1">
                        </div>
                        <div class="btn-group mt-2 col-md-12">
                            <button type="submit" value="Submit" onclick="mybutton()">Submit</button>
                           

                        </div>
                    </div>

                    <div class="d-flex push1">
                        <div class="btn-group float-end">
                            <image src="../assets/excel.png" id="btnExport" onclick="exportReportToExcel(this)"></image>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                            <image src="../assets/pdf.png" id="btnExport" onclick="pdf()"></image>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </div>
                    </div>
                </div>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <div class="col">
                    <table id="Table1" hidden style="border: 1px solid black;border-collapse: collapse;" width="100%" align="center" cellpadding="2" cellspacing="2" border="0" bgcolor="#EAEAEA">
                        <thead id="reporthead1">
                            <tr align="left" style="background-color:#004080;color:White;">
                                <td>S.No</td>
                                <td>Bay</td>
                                <td>Date</td>

                            </tr>
                        <tbody id="reportdatas1"></tbody>
                    </table>
                    <table id="Table" style="border: 1px solid black;border-collapse: collapse;" width="100%" align="center" cellpadding="2" cellspacing="2" border="0" bgcolor="#EAEAEA">
                        <thead id="reporthead">
                            @*<tr align="left" style="background-color:#004080;color:White;">
                                <td>S.No</td>
                                <td>Bay</td>
                                <td colspan="3">Date</td>
                            </tr>

                            <tr>
                                <td></td>
                                <td></td>
                                <td>1</td>
                                <td>2</td>
                                <td>3</td>
                                
                            </tr>*@

                        <tbody id="reportdatas"></tbody>

                    </table>
                </div>
                <div id="pageNavPosition" style="padding-top: 20px" align="center">
                </div>
            </div>
        </div>
    </div>
    <div id="loader"></div>
    <script src="../assets/script/svg-template.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js"></script>
    <script src="../Scripts/table2excel.js"></script>
    <script src="../Scripts/tableHTMLExport.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.4.1/jspdf.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/2.3.5/jspdf.plugin.autotable.min.js"></script>
    <script>
        let docdefinition = "";
        var pager = new Pager('Table', 10);
        //var spinner = $('#loader');
        var weburl= '@System.Configuration.ConfigurationManager.AppSettings["URL"]';
        var fromdate, todate;
        $(document).ready(function () {
            var now = new Date();
            var day = ("0" + now.getDate()).slice(-2);
            var month = ("0" + (now.getMonth() + 1)).slice(-2);
            var today = now.getFullYear() + "-" + (month) + "-" + (day);
            fromdate = now.getFullYear() + "-" + (month) + "-" + (day);
            todate = now.getFullYear() + "-" + (month) + "-" + (day);
            $('#datechange').val(today);
            $('#datechange1').val(today);
            datechange.max = new Date().toISOString().split("T")[0];
            //spinner.show();
            var head = "";
          head= ` <tr align="left" style="background-color:#004080;color:White;">
                                <td>S.No</td>
                                <td>Bay</td>
                                <td colspan="3">Date</td>
                            </tr>

                            <tr>
                                <td></td>
                                <td></td>
                                <td>${ addDaysToCurrentDate(now, 2) }</td>
                                <td>${addDaysToCurrentDate(now,1)}</td>
                                <td>${addDaysToCurrentDate(now,0)}</td>

                            </tr>`;

            document.getElementById("reporthead").innerHTML = head;
            Gettruckcount(addDaysToCurrentDate(now, 2), addDaysToCurrentDate(now, 0));
        });
        $('#datechange').change(function () {
            var selecteddate = this.value;
            $('#reportdatas').innerHTML = "";
            fromdate = selecteddate;

        });
        function addDaysToCurrentDate(date,noofDays) {
            date = new Date(date);
            next_date = new Date(date.setDate(date.getDate() - noofDays));
            var IncrementedDate = next_date.toISOString().slice(0, 10);
            console.log("Incremented Date " + IncrementedDate);
            return IncrementedDate;
        }
        function addDays(myDate, days) {
            return new Date(myDate.getTime() + days * 24 * 60 * 60 * 1000);
        }
        function addDaystoDate(date, days) {
            let result = new Date();
            result.setDate(date.getDate() - days);
            return result;
        }

        $('#datechange1').change(function () {
            var selecteddate = this.value;
            $('#reportdatas').innerHTML = "";
            todate = selecteddate;


        });


        async function Gettruckcount(fromdate, todate) {

            let url = weburl + "api/GetReportController/Gettruckcountfor3days/" + fromdate + "/" + todate;

            axios.get(url).then

                (data => {

                    console.log(data.data);
                    var row = '', row1 = '', row2 = '', row3 = '';
                    let rowhtml = "";
                    // spinner.hide();
                    var head = "";
                    head = ` <tr align="left" style="background-color:#004080;color:White;">
                                <td>S.No</td>
                                <td>Bay</td>
                                <td colspan="3">Date</td>
                            </tr>

                            <tr>
                                <td></td>
                                <td></td>
                                <td>${addDaysToCurrentDate(new Date(todate), 2)}</td>
                                <td>${addDaysToCurrentDate(new Date(todate), 1)}</td>
                                <td>${addDaysToCurrentDate(new Date(todate), 0)}</td>

                            </tr>`;

                    document.getElementById("reporthead").innerHTML = head;
               
                    if (data.data.length == 0) {

                        document.getElementById("reportdatas").innerHTML = "No Datas";

                        return;
                    }
                    for (i = 0; i < data.data.length; i++) {
                        let obj = data.data[i];
//                        alert(date[0]);
                        rowhtml += `<tr>
<td>${i+1}</td>
<td>${obj.bayno}</td>
<td>${obj.count1}</td>
<td>${obj.count2}</td>
<td>${obj.count3}</td>


</tr >
`;



                       
                        document.getElementById("reportdatas").innerHTML = rowhtml;
                    //    spinner.hide();
                    }
            

                    pager.init();
                    pager.showPageNav('pager', 'pageNavPosition');
                    pager.showPage(1);

                }).catch(err => alert(err));
        }
        function mybutton() {
            //spinner.show();
            if (fromdate > todate) {
                alert("todate should be greater from fromdate");
                todate = today;
                $('#todatechange').val(today);
            }
            else if (isMoreThan30DaysAgo(new Date(fromdate))) {
                alert("Please select below 3 days");
            }
            else {
               // spinner.show();
                Gettruckcount(fromdate, todate);
            }
          
        }
        function isMoreThan30DaysAgo(date) {
            const thirtyDaysInMs = 2 * 24 * 60 * 60 * 1000;
            const timestampThirtyDaysAgo = new Date(todate) - thirtyDaysInMs;
            if (timestampThirtyDaysAgo > date) {
                return true;
            } else {
                return false;
            }
        }

        function addColumn() {
            var table = document.getElementById("Table");
            var rows = table.rows;
            console.log("rows", rows);

            for (var i = 0; i < rows.length; ++i) {
                // td = rows[i].cells;
                var td = document.createElement("td");
                td.innerText = i;
                rows[i].appendChild(td);
            }
        }

        function addRow() {
            var table = document.getElementById("Table");
            var tr = document.createElement("tr");
            var th = document.createElement("th");
            var td = document.createElement("td");
            td.innerText = "im a td";
            th.innerText = "im a th";
            tr.appendChild(th);
            tr.appendChild(td);
            table.appendChild(tr);
        }

        function addHeaderCell() {
            var table = document.getElementById("Table");
            var th = document.createElement("th");
            th.innerText = "Date";
            var row1 = table.rows[0];
            row1.appendChild(th);
        }
       
        function pdf() {
            var doc = new jsPDF(this.pdfOrientation, 'pt', this.pdfFormat);
            var res = doc.autoTableHtmlToJson(document.getElementById("Table1"));
            doc.autoTable(res.columns, res.data, {
                margin: { top: 40, horizontal: 10 }, startY: false, theme: 'grid', pageBreak:
                    'always', tableWidth: 'auto', columnWidth: 'wrap', showHeader: 'everyPage',
                tableLineColor: 200, tableLineWidth: 0,
                columnStyles: {
                    0: { columnWidth: 'auto' }, 1: { columnWidth: 'auto' }, 2: { columnWidth: 'auto' }, 3:
                        { columnWidth: 'auto' }, 4: { columnWidth: 'auto' },
                    5: { columnWidth: 'auto' }, 6: { columnWidth: 'auto' }, 7: { columnWidth: 'auto' }, 8:
                        { columnWidth: 'auto' }
                },
                headerStyles: { theme: 'grid' },
                styles: {
                    overflow: 'linebreak', columnWidth: 'wrap', font: 'arial', fontSize: 10,
                    cellPadding: 8, overflowColumns: 'linebreak'
                },
            });
            doc.save('Report.pdf');
        }
        function exportReportToExcel() {
            var tab_text = "<table border='2px'><tr bgcolor='#87AFC6'>";
            var textRange; var j = 0;
            tab = document.getElementById('Table'); // id of table

            for (j = 0; j < tab.rows.length; j++) {
                tab_text = tab_text + tab.rows[j].innerHTML + "</tr>";
                //tab_text=tab_text+"</tr>";
            }

            tab_text = tab_text + "</table>";
            tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, "");//remove if u want links in your table
            tab_text = tab_text.replace(/<img[^>]*>/gi, ""); // remove if u want images in your table
            tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, ""); // reomves input params

            var ua = window.navigator.userAgent;
            var msie = ua.indexOf("MSIE ");

            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
            {
                txtArea1.document.open("txt/html", "replace");
                txtArea1.document.write(tab_text);
                txtArea1.document.close();
                txtArea1.focus();
                sa = txtArea1.document.execCommand("SaveAs", true, "Say Thanks to Sumit.xls");
            }
            else                 //other browser not tested on IE 11
                sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));

            return (sa);
        }
       
        function numberWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
        function Pager(tableName, itemsPerPage) {

            this.tableName = tableName;

            this.itemsPerPage = itemsPerPage;

            this.currentPage = 1;

            this.pages = 0;

            this.inited = false;

            this.showRecords = function (from, to) {

                var rows = document.getElementById(tableName).rows;

                // i starts from 1 to skip table header row

                for (var i = 1; i < rows.length; i++) {

                    if (i < from || i > to)

                        rows[i].style.display = 'none';

                    else

                        rows[i].style.display = '';

                }

            }

            this.showPage = function (pageNumber) {

                if (!this.inited) {

                    alert("not inited");

                    return;

                }

                var oldPageAnchor = document.getElementById('pg' + this.currentPage);

                oldPageAnchor.className = 'pg-normal';

                this.currentPage = pageNumber;

                var newPageAnchor = document.getElementById('pg' + this.currentPage);

                newPageAnchor.className = 'pg-selected';

                var from = (pageNumber - 1) * itemsPerPage + 1;

                var to = from + itemsPerPage - 1;

                this.showRecords(from, to);

            }

            this.prev = function () {

                if (this.currentPage > 1)

                    this.showPage(this.currentPage - 1);

            }

            this.next = function () {

                if (this.currentPage < this.pages) {

                    this.showPage(this.currentPage + 1);

                }

            }

            this.init = function () {

                var rows = document.getElementById(tableName).rows;

                var records = (rows.length - 1);

                this.pages = Math.ceil(records / itemsPerPage);

                this.inited = true;

            }

            this.showPageNav = function (pagerName, positionId) {

                if (!this.inited) {

                    alert("not inited");

                    return;

                }

                var element = document.getElementById(positionId);

                var pagerHtml = '<span onclick="' + pagerName + '.prev();" class="pg-normal"> « Prev </span> ';

                for (var page = 1; page <= this.pages; page++)

                    pagerHtml += '<span id="pg' + page + '" class="pg-normal" onclick="' + pagerName + '.showPage(' + page + ');">' + page + '</span> ';

                pagerHtml += '<span onclick="' + pagerName + '.next();" class="pg-normal"> Next »</span>';

                element.innerHTML = pagerHtml;

            }

        }
    </script>


</body>
